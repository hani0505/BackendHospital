// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Prioridade {
  EMERGÊNCIA
  MUITO_URGENTE
  URGENTE
  POUCO_URGENTE
  NÃO_URGENTE
}

enum Status {
  AGUARDANDO
  AGUARDANDO_TRIAGEM
  AGUARDANDO_MEDICO
  EM_ATENDIMENTO
  ATENDIDO
}

enum Especialidade {
  CARDIOLOGISTA
  PEDIATRIA
  ORTOPEDISTA
}

model Paciente {
  id           String     @id @default(uuid())
  nome         String
  motivo       String
  prioridade   Prioridade
  status       Status     @default(AGUARDANDO)
  dataCadastro DateTime   @default(now())

  atendimento Atendimento[]
}

model Medico {
  id            String        @id @default(uuid())
  nome          String
  especialidade Especialidade
  email         String        @unique
  senha         String

  atendimento Atendimento[]
}

model Atendente {
  id    String @id @default(uuid())
  nome  String
  email String @unique
  senha String
}

model Atendimento {
  id         String    @id @default(uuid())
  pacienteId String
  medicoId   String
  horaInicio DateTime
  horaFim    DateTime?
  status     Status    @default(EM_ATENDIMENTO)

  medico   Medico   @relation(fields: [medicoId], references: [id])
  paciente Paciente @relation(fields: [pacienteId], references: [id])

  @@unique([medicoId, pacienteId])
}
